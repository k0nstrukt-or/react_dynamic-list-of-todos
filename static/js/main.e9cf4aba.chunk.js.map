{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectUser","selectedTodo","className","map","todo","completed","title","type","onClick","userId","id","TodoFilter","changeFilteredType","changeQuery","query","onChange","event","target","value","handleStatusChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedUser","useState","user","setUser","useEffect","loadUser","a","userFromServer","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","loading","setLoading","setUserId","setSelectedTodo","setSelectedUser","setQuery","filteredBy","setFilteredBy","loadTodos","todosFromServer","handleFilter","toLowerCase","includes","filter","todoId","userTodo","find","filterType","input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9cf4aba.chunk.js","sourcesContent":["import React from 'react';\n\nenum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\ntype Props = {\n  changeFilteredType: (filterType: string) => void,\n  changeQuery: (input: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeFilteredType,\n  changeQuery,\n  query,\n}) => {\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeFilteredType(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleStatusChange(event)}\n          >\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (id:number, todoId: number) => void,\n  selectedTodo: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={todo.completed\n              ? ('has-background-success-light has-text-success')\n              : ('has-background-danger-light has-text-danger')}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              <span className=\"is-size-5\">\n                <i className={todo.completed\n                  ? ('fas fa-check')\n                  : ('fas fa-xmark')}\n                />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p>{todo.title}</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectUser(todo.userId, todo.id)}\n              >\n                <span className=\"icon\">\n                  {selectedTodo === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nenum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [loading, setLoading] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [selectedUser, setSelectedUser] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filteredBy, setFilteredBy] = useState<string>(SortType.ALL);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todosFromServer = await getTodos();\n\n      setLoading(true);\n      setTodos(todosFromServer);\n      setVisibleTodos(todosFromServer);\n    };\n\n    loadTodos();\n    setLoading(false);\n  }, []);\n\n  const changeFilteredBy = (filterType: string) => {\n    setFilteredBy(filterType);\n  };\n\n  const changeQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleFilter = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (filteredBy) {\n      case SortType.ALL:\n        setVisibleTodos(todos.filter(todo => handleFilter(todo.title)));\n        break;\n\n      case SortType.ACTIVE:\n        setVisibleTodos(todos.filter(todo => handleFilter(todo.title))\n          .filter(todo => !todo.completed));\n        break;\n\n      case SortType.COMPLETED:\n        setVisibleTodos(todos.filter(todo => handleFilter(todo.title))\n          .filter(todo => todo.completed));\n        break;\n\n      default:\n        break;\n    }\n  }, [filteredBy, query]);\n\n  const selectUser = (id: number, todoId: number) => {\n    setUserId(id);\n    setSelectedUser(!selectedUser);\n    setSelectedTodo(todoId);\n  };\n\n  const userTodo = todos.find(todo => todo.id === selectedTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {!loading ? <Loader /> : (\n              <>\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter\n                    changeFilteredType={changeFilteredBy}\n                    changeQuery={changeQuery}\n                    query={query}\n                  />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectUser={selectUser}\n                    selectedTodo={selectedTodo}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedUser && (\n        <TodoModal\n          todo={userTodo}\n          selectedUser={userId}\n          selectUser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo?: Todo,\n  selectedUser: number,\n  selectUser: (id: number, todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedUser,\n  selectUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const userFromServer = await getUser(selectedUser);\n\n      setUser(userFromServer);\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => selectUser(0, 0)}\n              >\n                close\n              </button>\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {\n                  todo?.completed\n                    ? <strong className=\"has-text-succses\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n                {' by '}\n\n                <a href={`mailto: ${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}